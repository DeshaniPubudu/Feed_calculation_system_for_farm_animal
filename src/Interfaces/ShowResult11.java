/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Date;
import javax.swing.JOptionPane;
/**
 *
 * @author gavishka
 */
public class ShowResult11 extends javax.swing.JFrame {

   Connection conn =null;
    public ShowResult11() {
        initComponents();
         Toolkit toolkit = getToolkit();
        Dimension size =toolkit.getScreenSize();
        setLocation(size.width/2-getWidth()/2, size.height/2-getHeight()/2);
    
        
           conn = DBConect.Connected();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        cp = new javax.swing.JLabel();
        cpgram = new javax.swing.JLabel();
        j = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cpcost = new javax.swing.JLabel();
        megram = new javax.swing.JLabel();
        ca = new javax.swing.JLabel();
        me = new javax.swing.JLabel();
        cacost = new javax.swing.JLabel();
        cagram = new javax.swing.JLabel();
        mecost = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        mename = new javax.swing.JLabel();
        caname = new javax.swing.JLabel();
        cpname = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        a = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        j1 = new javax.swing.JLabel();
        j2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/calculation display.jpg"))); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Result ");
        setResizable(false);

        jPanel1.setLayout(null);

        jButton2.setBackground(new java.awt.Color(255, 255, 204));
        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(60, 453, 80, 30);

        jButton3.setBackground(new java.awt.Color(255, 255, 204));
        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButton3.setText("Report ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(720, 490, 80, 23);

        jButton1.setBackground(new java.awt.Color(255, 255, 204));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(1000, 490, 80, 23);

        jButton4.setBackground(new java.awt.Color(255, 255, 204));
        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButton4.setText("Show ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(450, 453, 70, 30);

        cp.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        cp.setText("Cp");
        jPanel1.add(cp);
        cp.setBounds(50, 100, 80, 20);

        cpgram.setText("30.5");
        jPanel1.add(cpgram);
        cpgram.setBounds(110, 190, 120, 20);

        j.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        j.setText("Kilogram : ");
        jPanel1.add(j);
        j.setBounds(160, 430, 80, 20);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Rs. :");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(160, 400, 31, 17);

        cpcost.setText("00.00");
        jPanel1.add(cpcost);
        cpcost.setBounds(60, 160, 70, 20);

        megram.setText("00");
        jPanel1.add(megram);
        megram.setBounds(430, 190, 30, 20);

        ca.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ca.setText("Ca");
        jPanel1.add(ca);
        ca.setBounds(200, 330, 70, 20);

        me.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        me.setText("Me");
        jPanel1.add(me);
        me.setBounds(320, 100, 70, 20);

        cacost.setText("00.00");
        jPanel1.add(cacost);
        cacost.setBounds(210, 400, 80, 20);

        cagram.setText("00");
        jPanel1.add(cagram);
        cagram.setBounds(250, 430, 90, 20);

        mecost.setText("00.00");
        jPanel1.add(mecost);
        mecost.setBounds(360, 170, 50, 20);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Food Name : ");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(310, 140, 100, 17);

        mename.setFont(new java.awt.Font("Lucida Console", 2, 12)); // NOI18N
        mename.setText("------------");
        jPanel1.add(mename);
        mename.setBounds(400, 140, 150, 13);

        caname.setFont(new java.awt.Font("Lucida Console", 2, 12)); // NOI18N
        caname.setText("------------");
        jPanel1.add(caname);
        caname.setBounds(270, 370, 100, 13);

        cpname.setFont(new java.awt.Font("Lucida Console", 2, 12)); // NOI18N
        cpname.setText("------------");
        jPanel1.add(cpname);
        cpname.setBounds(120, 130, 150, 20);

        area.setColumns(20);
        area.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        area.setRows(5);
        jScrollPane1.setViewportView(area);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(570, 20, 530, 470);

        jButton5.setBackground(new java.awt.Color(255, 255, 204));
        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButton5.setText("Print");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);
        jButton5.setBounds(849, 490, 70, 23);

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel2.setText("Enter Amount of Animal");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(560, 490, 150, 20);

        a.setBackground(new java.awt.Color(204, 255, 204));
        a.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        a.setText("1");
        jPanel1.add(a);
        a.setBounds(480, 490, 60, 20);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Food Name : ");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(160, 370, 100, 17);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Food Name : ");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(30, 130, 100, 17);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("Rs. :");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(310, 170, 31, 17);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("Rs. :");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(30, 160, 31, 17);

        j1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        j1.setText("Kilogram : ");
        jPanel1.add(j1);
        j1.setBounds(310, 190, 80, 20);

        j2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        j2.setText("Kilogram : ");
        jPanel1.add(j2);
        j2.setBounds(30, 190, 80, 20);

        jLabel11.setFont(new java.awt.Font("Georgia", 2, 14)); // NOI18N
        jLabel11.setText("Only one Animal !! ");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(380, 400, 170, 17);

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/calculation display (1).jpg"))); // NOI18N
        jPanel1.add(jLabel12);
        jLabel12.setBounds(0, 0, 900, 520);

        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(490, 420, 33, 13);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/calculation display (1).jpg"))); // NOI18N
        jPanel1.add(jLabel10);
        jLabel10.setBounds(900, -7, 900, 540);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1094, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
    
        
        
        
        
        
        
        
        
        
        
        
        try {
            
   String sql = "select food,cpcost from information where cpcost =(select min(cpcost) from information) ";
             Statement stm = conn.createStatement();
           ResultSet rs = stm. executeQuery(sql);
  
     while (rs.next()){
     String n = rs .getString("food");
       //JOptionPane.showMessageDialog(null,n);
     cpname.setText(n);

     
        /* try {
              PreparedStatement pst = conn.prepareStatement("insert into report (nutrition,fname)  values  (?,?,?,?)");
            
            pst.setString(1,"Cp");
            pst.setString(2,n);
            pst.setString(3,null);
            pst.setString(4,null);
           
            
             pst.executeUpdate();
         } catch (Exception e) {
         }*/
     
     
     
     
     
     
     
     
     }
            
            
            
            
            
            
            
        } catch (Exception e) {
         
    JOptionPane.showMessageDialog(null,e);
        }
        
        
        
        
        
        
        
        
        
        
        
        //cost eka
        
        try {
            String sql = "select cpcost from information where cpcost =(select min(cpcost) from information) ";
             Statement stm = conn.createStatement();
           ResultSet rs = stm. executeQuery(sql);
           
           while (rs.next()){
     String n = rs .getString("cpcost");
       //JOptionPane.showMessageDialog(null,n);
     cpcost.setText(n);
     float cost = Float.valueOf(n);
    
     
     ///////.........................
     
     
    
     String sql2 = "select foodcost,food  from information,food_cost where food =(select food  from information where cpcost =(select min(cpcost) from information)) And food_cost.feed=information.food ";
     Statement stm2 = conn.createStatement();
     ResultSet rs2 = stm2. executeQuery(sql2);
  
     while (rs2.next()){
     String m  = rs2 .getString("foodcost");
   
        float rupee = Float.valueOf(m);
       //  JOptionPane.showMessageDialog(null,cost);
       // JOptionPane.showMessageDialog(null,rupee);
     
        
        
        float gram = (cost)/(rupee);
        
        float rgram = Math.round(gram *100)/100.0F;
          // JOptionPane.showMessageDialog(null,rgram);
      // cpgram.setText(rgram);
        String srgram =  Float.toString(rgram);
        cpgram.setText(srgram);
        
       
        
        
        
        
     }
         
        
    /* try {
              PreparedStatement pst = conn.prepareStatement("insert into report (cost)  values  (?)");
            
            pst.setString(1,n);
            
           
            
             pst.executeUpdate();
         } catch (Exception e) {
         }*/
     

     
     }
           
        } catch (Exception e) {
            
              JOptionPane.showMessageDialog(null,e); 
            
        }
        
     
        
        // cost 
     
        //gram walata 
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        //ME walata ............................................................
        
        
           try {
            
   String sql = "select food,mecost from information where mecost =(select min(mecost) from information) ";
             Statement stm = conn.createStatement();
           ResultSet rs = stm. executeQuery(sql);
  
     while (rs.next()){
     String n = rs .getString("food");
       //JOptionPane.showMessageDialog(null,n);
     mename.setText(n);

     
     }
            
            
            
            
            
            
            
        } catch (Exception e) {
         
    JOptionPane.showMessageDialog(null,e);
        }
        
        
        
        
        
        
        
        
        
        
        
        //cost eka
        
        try {
            String sql = "select mecost from information where mecost =(select min(mecost) from information) ";
             Statement stm = conn.createStatement();
           ResultSet rs = stm. executeQuery(sql);
           
           while (rs.next()){
     String n = rs .getString("mecost");
       //JOptionPane.showMessageDialog(null,n);
     mecost.setText(n);
     float cost = Float.valueOf(n);
    
     
     ///////.........................
     
     
    
     String sql2 = "select foodcost,food  from information,food_cost where food =(select food  from information where mecost =(select min(mecost) from information)) And food_cost.feed=information.food ";
     Statement stm2 = conn.createStatement();
     ResultSet rs2 = stm2. executeQuery(sql2);
  
     while (rs2.next()){
     String m  = rs2 .getString("foodcost");
   
        float rupee = Float.valueOf(m);
       //  JOptionPane.showMessageDialog(null,cost);
       // JOptionPane.showMessageDialog(null,rupee);
     
        
        
        float gram = (cost)/(rupee);
        
        float rgram = Math.round(gram *100)/100.0F;
           //JOptionPane.showMessageDialog(null,rgram);
      // cpgram.setText(rgram);
        String srgram =  Float.toString(rgram);
        megram.setText(srgram);
     }
         
        
     
     

     
     }
           
        } catch (Exception e) {
            
              JOptionPane.showMessageDialog(null,e); 
            
        }
        
     
        
        // cost 
     
        //gram walata 
        
        
        
        
    //
    
    
    
    
    // ca walta 
    
    try {
            
   String sql = "select food,cacost from information where cacost =(select min(cacost) from information) ";
             Statement stm = conn.createStatement();
           ResultSet rs = stm. executeQuery(sql);
  
     while (rs.next()){
     String n = rs .getString("food");
      // JOptionPane.showMessageDialog(null,n);
     caname.setText(n);

     
     }
            
            
            
            
            
            
            
        } catch (Exception e) {
         
    JOptionPane.showMessageDialog(null,e);
        }
        
        
        
        
        
        
        
        
        
        
        
        //cost eka
        
        try {
            String sql = "select cacost from information where cacost =(select min(cacost) from information) ";
             Statement stm = conn.createStatement();
           ResultSet rs = stm. executeQuery(sql);
           
           while (rs.next()){
     String n = rs .getString("cacost");
       //JOptionPane.showMessageDialog(null,n);
     cacost.setText(n);
     float cost = Float.valueOf(n);
    
     
     ///////.........................
     
     
    
     String sql2 = "select foodcost,food  from information,food_cost where food =(select food  from information where cacost =(select min(cacost) from information)) And food_cost.feed=information.food ";
     Statement stm2 = conn.createStatement();
     ResultSet rs2 = stm2. executeQuery(sql2);
  
     while (rs2.next()){
     String m  = rs2 .getString("foodcost");
   
        float rupee = Float.valueOf(m);
        // JOptionPane.showMessageDialog(null,cost);
       // JOptionPane.showMessageDialog(null,rupee);
     
        
        
        float gram = (cost)/(rupee);
        
        float rgram = Math.round(gram *100)/100.0F;
          // JOptionPane.showMessageDialog(null,rgram);
      // cpgram.setText(rgram);
        String srgram =  Float.toString(rgram);
        cagram.setText(srgram);
     }
         
        
     
     

     
     }
           
        } catch (Exception e) {
            
              JOptionPane.showMessageDialog(null,e); 
            
        }
        
     
        
        // cost 
     
        //gram walata 
        
    
       
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        // avail ..............................................................
        try {
            
   String sql = "select food,availcost from information where availcost =(select min(availcost) from information) ";
             Statement stm = conn.createStatement();
           ResultSet rs = stm. executeQuery(sql);
  
     while (rs.next()){
     String n = rs .getString("food");
       //JOptionPane.showMessageDialog(null,n);
     //availname.setText(n);

     
     }
            
            
            
            
            
            
            
        } catch (Exception e) {
         
    JOptionPane.showMessageDialog(null,e);
        }
        
        
        
        
        
        
        
        
        
        
        
        //cost eka
        
        try {
            String sql = "select availcost from information where availcost =(select min(availcost) from information) ";
             Statement stm = conn.createStatement();
           ResultSet rs = stm. executeQuery(sql);
           
           while (rs.next()){
     String n = rs .getString("availcost");
       //JOptionPane.showMessageDialog(null,n);
     //availcost.setText(n);
     float cost = Float.valueOf(n);
    
     
     ///////.........................
     
     
    
     String sql2 = "select foodcost,food  from information,food_cost where food =(select food  from information where availcost =(select min(availcost) from information)) And food_cost.feed=information.food ";
     Statement stm2 = conn.createStatement();
     ResultSet rs2 = stm2. executeQuery(sql2);
  
     while (rs2.next()){
     String m  = rs2 .getString("foodcost");
   
        float rupee = Float.valueOf(m);
        // JOptionPane.showMessageDialog(null,cost);
      //  JOptionPane.showMessageDialog(null,rupee);
     
        
        
        float gram = (cost)/(rupee);
        
        float rgram = Math.round(gram *100)/100.0F;
          // JOptionPane.showMessageDialog(null,rgram);
      // cpgram.setText(rgram);
        String srgram =  Float.toString(rgram);
        //availgram.setText(srgram);
     }
         
        
     
     

     
     }
           
        } catch (Exception e) {
            
              JOptionPane.showMessageDialog(null,e); 
            
        }
        
     
        
        // cost 
     
        //gram walata 
        
        
        
        
        
        
        
        
        
        //..........................................lys 
        
        
        
          try {
            
   String sql = "select food,lyscost from information where lyscost =(select min(lyscost) from information) ";
             Statement stm = conn.createStatement();
           ResultSet rs = stm. executeQuery(sql);
  
     while (rs.next()){
     String n = rs .getString("food");
      // JOptionPane.showMessageDialog(null,n);
     //lysname.setText(n);

     
     }
            
            
            
            
            
            
            
        } catch (Exception e) {
         
    JOptionPane.showMessageDialog(null,e);
        }
        
        
        
        
        
        
        
        
        
        
        
        //cost eka
        
        try {
            String sql = "select lyscost from information where lyscost =(select min(lyscost) from information) ";
             Statement stm = conn.createStatement();
           ResultSet rs = stm. executeQuery(sql);
           
           while (rs.next()){
     String n = rs .getString("lyscost");
       //JOptionPane.showMessageDialog(null,n);
     //lyscost.setText(n);
     float cost = Float.valueOf(n);
    
     
     ///////.........................
     
     
    
     String sql2 = "select foodcost,food  from information,food_cost where food =(select food  from information where lyscost =(select min(lyscost) from information)) And food_cost.feed=information.food ";
     Statement stm2 = conn.createStatement();
     ResultSet rs2 = stm2. executeQuery(sql2);
  
     while (rs2.next()){
     String m  = rs2 .getString("foodcost");
   
        float rupee = Float.valueOf(m);
        // JOptionPane.showMessageDialog(null,cost);
        //JOptionPane.showMessageDialog(null,rupee);
     
        
        
        float gram = (cost)/(rupee);
        
        float rgram = Math.round(gram *100)/100.0F;
          // JOptionPane.showMessageDialog(null,rgram);
      // cpgram.setText(rgram);
        String srgram =  Float.toString(rgram);
       // lysgram.setText(srgram);
     }
         
        
     
     

     
     }
           
        } catch (Exception e) {
            
              JOptionPane.showMessageDialog(null,e); 
            
        }
        
     
        
        // cost 
     
        //gram walata
        
        
        
        
        
        
        
       // met .................................................
       
       
       
       
       
           try {
            
   String sql = "select food,metcost from information where metcost =(select min(metcost) from information) ";
             Statement stm = conn.createStatement();
           ResultSet rs = stm. executeQuery(sql);
  
     while (rs.next()){
     String n = rs .getString("food");
       //JOptionPane.showMessageDialog(null,n);
     //metname.setText(n);

     
     }
            
            
            
            
            
            
            
        } catch (Exception e) {
         
    JOptionPane.showMessageDialog(null,e);
        }
        
        
        
        
        
        
        
        
        
        
        
        //cost eka
        
        try {
            String sql = "select metcost from information where metcost =(select min(metcost) from information) ";
             Statement stm = conn.createStatement();
           ResultSet rs = stm. executeQuery(sql);
           
           while (rs.next()){
     String n = rs .getString("metcost");
       //JOptionPane.showMessageDialog(null,n);
    // metcost.setText(n);
     float cost = Float.valueOf(n);
    
     
     ///////.........................
     
     
    
     String sql2 = "select foodcost,food  from information,food_cost where food =(select food  from information where metcost =(select min(metcost) from information)) And food_cost.feed=information.food ";
     Statement stm2 = conn.createStatement();
     ResultSet rs2 = stm2. executeQuery(sql2);
  
     while (rs2.next()){
     String m  = rs2 .getString("foodcost");
   
        float rupee = Float.valueOf(m);
       //  JOptionPane.showMessageDialog(null,cost);
        //JOptionPane.showMessageDialog(null,rupee);
     
        
        
        float gram = (cost)/(rupee);
        
        float rgram = Math.round(gram *100)/100.0F;
          // JOptionPane.showMessageDialog(null,rgram);
      // cpgram.setText(rgram);
        String srgram =  Float.toString(rgram);
       // metgram.setText(srgram);
     }
         
        
     
     

     
     }
           
        } catch (Exception e) {
            
              JOptionPane.showMessageDialog(null,e); 
            
        }
        
     
        
        // cost 
     
        //gram walata
        
       
       
       
      
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
     
        area.setText("++++++++++++++++++++++++++++++++++++++++++++++++++++++++ \n");
      area.setText(area.getText()+" \n ");
       area.setText(area.getText()+"++++++++++++++++++++ Farm Management System ++++++++++++++++++\n ");
       area.setText(area.getText()+" \n ");
       area.setText(area.getText()+"++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n ");
       area.setText(area.getText()+" \n");
       
area.setText(area.getText()+" \n ");
area.setText(area.getText()+" \n ");
       
        area.setText(area.getText()+"Nutrition\t Food Name \t\t Weight(Kg) \t\t  Cost(Rs.)\n" );
      /*  area.setText(area.getText()+" \n ");
        area.setText(area.getText()+" \n ");
       // area.setText(area.getText()+" \n " +);     
        area.setText(area.getText()+"" +cp.getText());   
        area.setText(area.getText()+"\t" +cpname.getText());
        area.setText(area.getText()+"\t\t" +cpgram.getText());
        area.setText(area.getText()+"\t\t" +cpcost.getText());
        
        area.setText(area.getText()+" \n ");
        area.setText(area.getText()+" \n ");
        
         area.setText(area.getText()+"" +me.getText());   
        area.setText(area.getText()+"\t" +mename.getText());
        area.setText(area.getText()+"\t\t" +megram.getText());
        area.setText(area.getText()+"\t\t" +mecost.getText());
        
        area.setText(area.getText()+" \n ");
        area.setText(area.getText()+" \n ");
        
        area.setText(area.getText()+"" +cp.getText());   
        area.setText(area.getText()+"\t" +caname.getText());
        area.setText(area.getText()+"\t\t" +cagram.getText());
        area.setText(area.getText()+"\t\t" +cacost.getText());
        
        area.setText(area.getText()+" \n ");
        area.setText(area.getText()+" \n ");
        
        area.setText(area.getText()+"" +avail.getText());   
        area.setText(area.getText()+"\t" +availname.getText());
        area.setText(area.getText()+"\t\t" +availgram.getText());
        area.setText(area.getText()+"\t\t" +availcost.getText());
        
        area.setText(area.getText()+" \n ");
        area.setText(area.getText()+" \n ");
        
        
         area.setText(area.getText()+"" +lys.getText());   
        area.setText(area.getText()+"\t" +lysname.getText());
        area.setText(area.getText()+"\t\t" +lysgram.getText());
        area.setText(area.getText()+"\t\t" +lyscost.getText());
        
        area.setText(area.getText()+" \n ");
        area.setText(area.getText()+" \n ");
        
        area.setText(area.getText()+"" +met.getText());   
        area.setText(area.getText()+"\t" +metname.getText());
        area.setText(area.getText()+"\t\t" +metgram.getText());
        area.setText(area.getText()+"\t\t" +metcost.getText());
           
        
         area.setText(area.getText()+" \n ");
        area.setText(area.getText()+" \n ");
         area.setText(area.getText()+" \n ");
        area.setText(area.getText()+" \n ");
        
        
        
     
    float v1,v2,v3,v4,v5,v6,v7;
    v1= Float.valueOf(cpcost.getText());
    v2= Float.valueOf(mecost.getText());
    v3= Float.valueOf(cacost.getText());
    v4= Float.valueOf(availcost.getText());
    v5= Float.valueOf(lyscost.getText());
    v6= Float.valueOf(metcost.getText());
     v7=v1+v2+v3+v4+v5+v6;
      
        
        
        area.setText(area.getText()+"\t\t\t\t Total Price : " +v7);
        
        
        
        
        
        
        
        
        
        
        */
        
        
        
        
        
        
        
        
        
        
        
        
        
        float cpc,cpg,amount;
        
        cpc= Float.valueOf(cpcost.getText());
        cpg= Float.valueOf(cpgram.getText());
        amount= Float.valueOf(a.getText());
        float cpco,cpgo;
        cpco=amount*cpc;
        cpgo=amount*cpg;
        
        
        
        float rcpgo = Math.round(cpgo *100)/100.0F;
        
        
        ////me
         float mec,meg;
        
        mec= Float.valueOf(mecost.getText());
        meg= Float.valueOf(megram.getText());
        amount= Float.valueOf(a.getText());
        float meco,mego;
        meco=amount*mec;
        mego=amount*meg;
        float rmego = Math.round(mego *100)/100.0F;
    
        /////me
    
        
        
        
        
        //ca..................................................
         float cac,cag;
        
        cac= Float.valueOf(cacost.getText());
        cag= Float.valueOf(cagram.getText());
        amount= Float.valueOf(a.getText());
        float caco,cago;
        caco=amount*cac;
        cago=amount*cag;
        float rcago = Math.round(cago *100)/100.0F;
        
      
        //ca.....................................
        
        
        
        
        //avail .....................................
        // float availc,availg;
        
       /// availc= Float.valueOf(availcost.getText());
        //availg= Float.valueOf(availgram.getText());
        amount= Float.valueOf(a.getText());
        //float availco,availgo;
       /// availco=amount*availc;
       // availgo=amount*availg;
       // float ravailgo = Math.round(availgo *100)/100.0F;
        
      //...............avail
        
      
      
      
      //lys...............................
       /*float lysc,lysg;
        
        lysc= Float.valueOf(lyscost.getText());
        lysg= Float.valueOf(lysgram.getText());
        amount= Float.valueOf(a.getText());
        float lysco,lysgo;
        lysco=amount*lysc;
        lysgo=amount*lysg;
        float rlysgo = Math.round(lysgo *100)/100.0F;
      //.......................lys*/
        
        
        
        
        //met...........................
         /*float metc,metg;
        
        metc= Float.valueOf(metcost.getText());
        metg= Float.valueOf(metgram.getText());
        amount= Float.valueOf(a.getText());
        float metco,metgo;
        metco=amount*metc;
        metgo=amount*metg;
        float rmetgo = Math.round(metgo *100)/100.0F;
        //.....................met*/
        
        
        
        //// metaha npahala 
        
        
          /*float cpc,cpg,amount;
        
        cpc= Float.valueOf(cpcost.getText());
        cpg= Float.valueOf(cpgram.getText());
        amount= Float.valueOf(a.getText());
        float cpco,cpgo;
        cpco=amount*cpc;
        cpgo=amount*cpg;
        
        
        
        float rcpgo = Math.round(cpgo *100)/100.0F;
        
        */
        
        
        
           area.setText(area.getText()+"" +cp.getText());   
        area.setText(area.getText()+"\t" +cpname.getText());
        area.setText(area.getText()+"\t\t" +rcpgo);
        area.setText(area.getText()+"\t\t" +cpco);
        
        area.setText(area.getText()+" \n ");
        area.setText(area.getText()+" \n ");
        
         area.setText(area.getText()+"" +me.getText());   
        area.setText(area.getText()+"\t" +mename.getText());
        area.setText(area.getText()+"\t\t" +rmego);
        area.setText(area.getText()+"\t\t" +meco);
        
        area.setText(area.getText()+" \n ");
        area.setText(area.getText()+" \n ");
        
        area.setText(area.getText()+"" +ca.getText());   
        area.setText(area.getText()+"\t" +caname.getText());
        area.setText(area.getText()+"\t\t" +rcago);
        area.setText(area.getText()+"\t\t" +caco);
        
        area.setText(area.getText()+" \n ");
        area.setText(area.getText()+" \n ");
        
      /*  area.setText(area.getText()+"" +avail.getText());   
        area.setText(area.getText()+"\t" +availname.getText());
        area.setText(area.getText()+"\t\t" +ravailgo);
        area.setText(area.getText()+"\t\t" +availco);*/
        
        area.setText(area.getText()+" \n ");
        area.setText(area.getText()+" \n ");
        
        
        /* area.setText(area.getText()+"" +lys.getText());   
        area.setText(area.getText()+"\t" +lysname.getText());
        area.setText(area.getText()+"\t\t" +rlysgo);
        area.setText(area.getText()+"\t\t" +lysco);*/
        
        area.setText(area.getText()+" \n ");
        area.setText(area.getText()+" \n ");
        
      /*  area.setText(area.getText()+"" +met.getText());   
        area.setText(area.getText()+"\t" +metname.getText());
        area.setText(area.getText()+"\t\t" +rmetgo);
        area.setText(area.getText()+"\t\t" +metco);*/
           
        
         area.setText(area.getText()+" \n ");
        area.setText(area.getText()+" \n ");
         area.setText(area.getText()+" \n ");
        area.setText(area.getText()+" \n ");
        
        
        
     
   float v1,v2,v3,v4,v5,v6,v7,v8;
    v1= Float.valueOf(cpcost.getText());
    v2= Float.valueOf(mecost.getText());
    v3= Float.valueOf(cacost.getText());
   // v4= Float.valueOf(availcost.getText());
   // v5= Float.valueOf(lyscost.getText());
   // v6= Float.valueOf(metcost.getText());
    v7= Float.valueOf(a.getText());
     v8=(v1+v2+v3)*v7;
      
        
        
        area.setText(area.getText()+"\t\t\t\t Total Price : " +v8);
        
        
           area.setText(area.getText()+" \n ");
        area.setText(area.getText()+" \n ");
        
        
        Date obj = new Date();
       String date = obj.toString();
       area.setText(area.getText()+" \n " +date);
        area.setText(area.getText()+" \n "); 
 area.setText(area.getText()+"Thank yOu !!!! \n ");

        
        
        
        
        
        
        //...................uda tik 
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       
        

      try {
            Statement stm = conn.createStatement();
                  String sql="drop table information";
  
          
                 stm. execute(sql);
        } catch (Exception e) {
        }

Selection se = new Selection ();
se.show();
dispose();



// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed



        try {
            area.print();
        } catch (Exception e) {
             JOptionPane.showMessageDialog(null,e);
        }






        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowResult11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowResult11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowResult11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowResult11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShowResult11().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField a;
    private javax.swing.JTextArea area;
    private javax.swing.JLabel ca;
    private javax.swing.JLabel cacost;
    private javax.swing.JLabel cagram;
    private javax.swing.JLabel caname;
    private javax.swing.JLabel cp;
    private javax.swing.JLabel cpcost;
    private javax.swing.JLabel cpgram;
    private javax.swing.JLabel cpname;
    private javax.swing.JLabel j;
    private javax.swing.JLabel j1;
    private javax.swing.JLabel j2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel me;
    private javax.swing.JLabel mecost;
    private javax.swing.JLabel megram;
    private javax.swing.JLabel mename;
    // End of variables declaration//GEN-END:variables
}
