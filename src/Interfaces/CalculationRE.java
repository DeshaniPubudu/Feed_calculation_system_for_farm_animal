//finisher boiler 
package Interfaces;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.Connection;
/**
 *
 * @author gavishka
 */
public class CalculationRE extends javax.swing.JFrame {

    Connection conn= null;
    
    public CalculationRE() {
        initComponents();
        Toolkit toolkit = getToolkit();
        Dimension size =toolkit.getScreenSize();
        setLocation(size.width/2-getWidth()/2, size.height/2-getHeight()/2);
        //databsae 
    conn = DBConect.Connected();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        co = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lable = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        com = new javax.swing.JCheckBox();
        ll = new javax.swing.JCheckBox();
        wf = new javax.swing.JCheckBox();
        dcp = new javax.swing.JCheckBox();
        fm = new javax.swing.JCheckBox();
        gom = new javax.swing.JCheckBox();
        sp = new javax.swing.JCheckBox();
        m = new javax.swing.JCheckBox();
        br = new javax.swing.JCheckBox();
        som = new javax.swing.JCheckBox();
        dm = new javax.swing.JCheckBox();
        sg = new javax.swing.JCheckBox();
        ymm = new javax.swing.JCheckBox();
        rp = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        po = new javax.swing.JCheckBox();
        hm = new javax.swing.JCheckBox();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("    Calculation");
        setResizable(false);

        jPanel1.setLayout(null);

        jButton1.setBackground(new java.awt.Color(255, 255, 204));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Calculate ");
        jButton1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 153), 1, true));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(630, 441, 120, 30);

        jButton2.setBackground(new java.awt.Color(255, 255, 204));
        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setText("Back");
        jButton2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 153), 1, true));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(50, 441, 120, 30);

        co.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coActionPerformed(evt);
            }
        });
        jPanel1.add(co);
        co.setBounds(580, 140, 20, 21);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel1.setText("Yellow mize mail ");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(460, 340, 110, 20);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setText("Rice polish");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(610, 100, 80, 20);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setText("Gingelly oil meal");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(610, 220, 110, 30);

        lable.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lable.setText("D Methionine");
        jPanel1.add(lable);
        lable.setBounds(460, 100, 110, 30);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel5.setText("Hypro meal ");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(610, 380, 110, 30);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel6.setText("Fish meal");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(610, 300, 110, 20);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel7.setText("Molasses");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(460, 140, 110, 30);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel8.setText("Soyabean oil meal ");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(610, 260, 150, 30);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel9.setText("DCP");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(460, 420, 110, 30);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel10.setText("Broken rice ");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(610, 340, 110, 30);

        com.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comActionPerformed(evt);
            }
        });
        jPanel1.add(com);
        com.setBounds(580, 180, 20, 21);

        ll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                llActionPerformed(evt);
            }
        });
        jPanel1.add(ll);
        ll.setBounds(430, 260, 20, 21);

        wf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wfActionPerformed(evt);
            }
        });
        jPanel1.add(wf);
        wf.setBounds(430, 180, 20, 21);

        dcp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dcpActionPerformed(evt);
            }
        });
        jPanel1.add(dcp);
        dcp.setBounds(430, 420, 20, 21);

        fm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fmActionPerformed(evt);
            }
        });
        jPanel1.add(fm);
        fm.setBounds(580, 300, 20, 21);

        gom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gomActionPerformed(evt);
            }
        });
        jPanel1.add(gom);
        gom.setBounds(580, 220, 20, 21);

        sp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spActionPerformed(evt);
            }
        });
        jPanel1.add(sp);
        sp.setBounds(430, 300, 20, 21);

        m.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mActionPerformed(evt);
            }
        });
        jPanel1.add(m);
        m.setBounds(430, 140, 20, 21);

        br.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brActionPerformed(evt);
            }
        });
        jPanel1.add(br);
        br.setBounds(580, 340, 20, 21);

        som.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                somActionPerformed(evt);
            }
        });
        jPanel1.add(som);
        som.setBounds(580, 260, 20, 21);

        dm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dmActionPerformed(evt);
            }
        });
        jPanel1.add(dm);
        dm.setBounds(430, 100, 20, 20);

        sg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sgActionPerformed(evt);
            }
        });
        jPanel1.add(sg);
        sg.setBounds(430, 380, 20, 21);

        ymm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ymmActionPerformed(evt);
            }
        });
        jPanel1.add(ymm);
        ymm.setBounds(430, 340, 20, 21);

        rp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rpActionPerformed(evt);
            }
        });
        jPanel1.add(rp);
        rp.setBounds(580, 100, 20, 21);

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel11.setText("Shell grid ");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(460, 380, 110, 30);

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel12.setText("Wheat floir ");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(460, 180, 110, 30);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel13.setText("Coconut oil meal ");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(610, 180, 110, 30);

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel14.setText("L  lys");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(460, 270, 36, 15);

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel15.setText("Palm oil");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(460, 230, 70, 15);

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel16.setText("Shel powder ");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(460, 300, 150, 30);

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel17.setText("Coconut oil ");
        jPanel1.add(jLabel17);
        jLabel17.setBounds(610, 140, 110, 30);

        po.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poActionPerformed(evt);
            }
        });
        jPanel1.add(po);
        po.setBounds(430, 220, 20, 21);
        jPanel1.add(hm);
        hm.setBounds(580, 380, 20, 21);

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/select foods_1.jpg"))); // NOI18N
        jPanel1.add(jLabel18);
        jLabel18.setBounds(0, 0, 900, 520);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 896, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      
    
        try {
           
            
            if(ymm.isSelected() || (rp.isSelected()) || (co.isSelected())|| (com.isSelected())||(gom.isSelected())||(som.isSelected())||
                         
                         (fm.isSelected())||(br.isSelected())||
                         (hm.isSelected())|| (dcp.isSelected())||(sg.isSelected())||
                         (dm.isSelected())|| (m.isSelected())||
                         (wf.isSelected())||(po.isSelected())||
                         (ll.isSelected())||(sp.isSelected())){
            
            
                
                try {
                     Statement stm = conn.createStatement();
                  String sql="create table Information (food varchar(50) primary key  ,cpcost Float  ,mecost float ,cacost float ,availcost float,lyscost float ,metcost float )";
  
               
                 stm. execute(sql);
                } catch (Exception e) {
                }
                
                
                
                
                
                
                
                
                
                
                
                
            
                try {
                    
                   if (ymm.isSelected()){
    
    try {
          String sql = "select foodcost from food_cost where feed = 'Yellow maize meal'";
     Statement stm = conn.createStatement();
     ResultSet rs = stm. executeQuery(sql);
  
     while (rs.next()){
         
      Float cost = rs .getFloat("foodcost");
    // JOptionPane.showMessageDialog(null,cost);
     String name="Yellow maize meal";
      double cpcost = (1/8.7F)*19*cost;
      double mecost = (1F/3400)*3100*cost;
         double cacost = (1/0.02F)*0.8*cost;
          double availcost = (1/0.1F)*0.5*cost;
           double lyscost = (1/0.19F)*1*cost;
            double metcost = (1/0.25F)*0.78*cost;
   
         try {
             PreparedStatement pst = conn.prepareStatement("insert into information (food,cpcost,mecost,cacost,availcost,lyscost,metcost)  values  (?,?,?,?,?,?,?)");
        
              
            pst.setString(1,name);
            pst.setDouble(2,cpcost);
            pst.setDouble(3,mecost);
            pst.setDouble(4,cacost);
            pst.setDouble(5,availcost);
            pst.setDouble(6,lyscost);
            pst.setDouble(7,metcost);
            
             pst.executeUpdate();
         
         
         } catch (Exception e) {
             JOptionPane.showMessageDialog(null,e);
         }
   
   
   
   
   
   
   
     }
     
     
    
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null,e);
        System.out.println(e);
    }
    
    
  


}//yellow  
                    
 //rice polish 

if(rp.isSelected()){

    try {
         String sql = "select foodcost from food_cost where feed = 'Rice polish'";
     Statement stm = conn.createStatement();
     ResultSet rs = stm. executeQuery(sql);   
        
     while (rs.next()){
         
     Float cost = rs .getFloat("foodcost");
     
     String name="Rice polish";
      double cpcost = (1F/11)*19*cost;
        double mecost = (1F/3200)*3100*cost;
         double cacost = (1/0.04F)*0.8*cost;
          double availcost = (1/0.45F)*0.5*cost;
           double lyscost = (1/0.47F)*1*cost;
            double metcost = (1/0.34F)*0.78*cost;
           
            
            
            
             PreparedStatement pst = conn.prepareStatement("insert into information (food,cpcost,mecost,cacost,availcost,lyscost,metcost)  values  (?,?,?,?,?,?,?)");
        
              
            pst.setString(1,name);
            pst.setDouble(2,cpcost);
            pst.setDouble(3,mecost);
            pst.setDouble(4,cacost);
            pst.setDouble(5,availcost);
            pst.setDouble(6,lyscost);
            pst.setDouble(7,metcost);
            
             pst.executeUpdate();
         
         
       
            
            
            
            
            

     
     }   
        
     
     
     
     
        
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null,e);
    }



}//rice polish 



if(co.isSelected()){

    try {
        
            String sql = "select foodcost from food_cost where feed  = 'Coconut oil'";
     Statement stm = conn.createStatement();
     ResultSet rs = stm. executeQuery(sql);   
        
     while (rs.next()){
         
     Float cost = rs .getFloat("foodcost");
     
     String name = "Coconut oil";
     // double cpcost = (1/11)*21*cost;
       double mecost = (1F/7500)*3100*cost;
         //double cacost = (1/0.004)*1*cost;
         // double availcost = (1/0.45)*0.5*cost;
          // double lyscost = (1/0.47)*1.25*cost;
           // double metcost = (1/0.34)*0.89*cost;
           
           
          
             PreparedStatement pst = conn.prepareStatement("insert into information(food,mecost)  values  (?,?)");
             
              
            pst.setString(1,name);
          //pst.setDouble(2,',');
            pst.setDouble(2,mecost);
           //pst.setString(4,"null");
         //  pst.setDouble(5,',');
          // pst.setDouble(6,',');
           // pst.setDouble(7,',');
            
             pst.executeUpdate();
         
         
         
           
           
           
           
           
           
     
     }  
        
        
        
        
        
        
        
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null,e);
    }





}//coconut oil 



// coconut oil meal 

if (com.isSelected()){

    
        try {
         String sql = "select foodcost from food_cost where feed  = 'Coconut oil meal'";
     Statement stm = conn.createStatement();
     ResultSet rs = stm. executeQuery(sql);   
        
     while (rs.next()){
         
     Float cost = rs .getFloat("foodcost");
     
     String name = "Coconut oil meal";
      double cpcost = (1F/20)*19*cost;
        double mecost = (1F/1750)*3100*cost;
         double cacost = (1/0.2F)*0.8*cost;
          double availcost = (1/0.2F)*0.5*cost;
           double lyscost = (1/0.61F)*1*cost;
            double metcost = (1/0.56F)*0.78*cost;
            
            
            
            
            
            
  PreparedStatement pst = conn.prepareStatement("insert into information (food,cpcost,mecost,cacost,availcost,lyscost,metcost)  values  (?,?,?,?,?,?,?)");

pst.setString(1,name);
            pst.setDouble(2,cpcost);
            pst.setDouble(3,mecost);
            pst.setDouble(4,cacost);
            pst.setDouble(5,availcost);
            pst.setDouble(6,lyscost);
            pst.setDouble(7,metcost);
            
             pst.executeUpdate();
     
     }   
        
        
        
        
        
        
        
        
        
        
            } catch (Exception e) {
    }





}//coconut oil meal 

//gingerly oil meal 

if(gom.isSelected()){

    try {
        
      String sql = "select foodcost from food_cost where feed  = 'Gingerly oil meal'";
     Statement stm = conn.createStatement();
     ResultSet rs = stm. executeQuery(sql);   
        
     while (rs.next()){
         
     Float cost = rs .getFloat("foodcost");
     
     String name = "Gingerly oil meal";
      double cpcost = (1F/32)*19*cost;
        double mecost = (1F/2400)*3100*cost;
         double cacost = (1/0.2F)*0.8*cost;
          double availcost = (1/0.4F)*0.5*cost;
           double lyscost = (1/0.58F)*1*cost;
            double metcost = (1/1.33F)*0.78*cost;
            
            
        PreparedStatement pst = conn.prepareStatement("insert into information (food,cpcost,mecost,cacost,availcost,lyscost,metcost)  values  (?,?,?,?,?,?,?)");
      pst.setString(1,name);
            pst.setDouble(2,cpcost);
            pst.setDouble(3,mecost);
            pst.setDouble(4,cacost);
            pst.setDouble(5,availcost);
            pst.setDouble(6,lyscost);
            pst.setDouble(7,metcost);
            
             pst.executeUpdate();
            
            
            
            

     
     }      
        
        
        
        
        
        
    } catch (Exception e) {
    }





}//..gengerly oil meal

//soybean 

if(som.isSelected()){

  try {
        
      String sql = "select foodcost from food_cost where feed  = 'Soyabean oil meal '";
     Statement stm = conn.createStatement();
     ResultSet rs = stm. executeQuery(sql);   
        
     while (rs.next()){
         
     Float cost = rs .getFloat("foodcost");
     
     String name = "Soyabean oil meal";
      double cpcost = (1F/42)*19*cost;
        double mecost = (1F/2500)*3100*cost;
         double cacost = (1/0.25F)*0.8*cost;
          double availcost = (1/0.25F)*0.5*cost;
           double lyscost = (1/2.7F)*1*cost;
            double metcost = (1/1.4F)*0.78*cost;

     
            
                    PreparedStatement pst = conn.prepareStatement("insert into information (food,cpcost,mecost,cacost,availcost,lyscost,metcost)  values  (?,?,?,?,?,?,?)");
     pst.setString(1,name);
            pst.setDouble(2,cpcost);
            pst.setDouble(3,mecost);
            pst.setDouble(4,cacost);
            pst.setDouble(5,availcost);
            pst.setDouble(6,lyscost);
            pst.setDouble(7,metcost);
            
             pst.executeUpdate();
            
            
            
     }      
        
        
        
        
        
        
    } catch (Exception e) {
    }




}//soyabean

//Fish meal

if(fm.isSelected()){


        
    try {
        
      String sql = "select foodcost from food_cost where feed  = 'Fish meal '";
     Statement stm = conn.createStatement();
     ResultSet rs = stm. executeQuery(sql);   
        
     while (rs.next()){
         
     Float cost = rs .getFloat("foodcost");
     
     String name = "Fish meal";
      double cpcost = (1F/72)*19*cost;
        double mecost = (1F/2750)*3100*cost;
         double cacost = (1F/5)*0.8*cost;
          double availcost = (1/2.5F)*0.5*cost;
           double lyscost = (1/5.2F)*1*cost;
            double metcost = (1F/3)*0.78*cost;

     
            
             PreparedStatement pst = conn.prepareStatement("insert into information (food,cpcost,mecost,cacost,availcost,lyscost,metcost)  values  (?,?,?,?,?,?,?)");
     pst.setString(1,name);
            pst.setDouble(2,cpcost);
            pst.setDouble(3,mecost);
            pst.setDouble(4,cacost);
            pst.setDouble(5,availcost);
            pst.setDouble(6,lyscost);
            pst.setDouble(7,metcost);
            
             pst.executeUpdate();
            
            
            
            
     }      
        
        
        
        
        
        
    } catch (Exception e) {
    }
     
        







}//Fish meal

//broken rice 


if(br.isSelected()){

try {
        
      String sql = "select foodcost from food_cost where feed =' Broken rice '";
     Statement stm = conn.createStatement();
     ResultSet rs = stm. executeQuery(sql);   
        
     while (rs.next()){
         
     Float cost = rs .getFloat("foodcost");
     
     String name = "Broken rice";
      double cpcost = (1F/7)*19*cost;
        double mecost = (1F/3050)*3100*cost;
         double cacost = (1/0.02F)*0.8*cost;
          double availcost = (1/0.04F)*0.5*cost;
           double lyscost = (1/0.28F)*1*cost;
            double metcost = (1/0.35F)*0.78*cost;

            
              PreparedStatement pst = conn.prepareStatement("insert into information (food,cpcost,mecost,cacost,availcost,lyscost,metcost)  values  (?,?,?,?,?,?,?)");
     pst.setString(1,name);
            pst.setDouble(2,cpcost);
            pst.setDouble(3,mecost);
            pst.setDouble(4,cacost);
            pst.setDouble(5,availcost);
            pst.setDouble(6,lyscost);
            pst.setDouble(7,metcost);
            
             pst.executeUpdate();
            
            
            
            
            
     
     }      
        
        
        
        
        
        
    } catch (Exception e) {
    }
     





}//broken rice

//hypromeal

if(hm.isSelected()){

try {
        
      String sql = "select foodcost from food_cost where feed  = 'Hypro meal'";
     Statement stm = conn.createStatement();
     ResultSet rs = stm. executeQuery(sql);   
        
     while (rs.next()){
         
     Float cost = rs .getFloat("foodcost");
     
     String name = "Hypro meal";
      double cpcost = (1F/63)*19*cost;
        double mecost = (1/3000F)*3100*cost;
         double cacost = (1/2.9F)*0.8*cost;
          double availcost = (1/1F)*0.5*cost;
           double lyscost = (1/2.83F)*1*cost;
            double metcost = (1/1.22F)*0.78*cost;

            
            
            
             PreparedStatement pst = conn.prepareStatement("insert into information (food,cpcost,mecost,cacost,availcost,lyscost,metcost)  values  (?,?,?,?,?,?,?)");
     pst.setString(1,name);
            pst.setDouble(2,cpcost);
            pst.setDouble(3,mecost);
            pst.setDouble(4,cacost);
            pst.setDouble(5,availcost);
            pst.setDouble(6,lyscost);
            pst.setDouble(7,metcost);
            
             pst.executeUpdate();
            
     
     }      
       
        
        
        
        
        
    } catch (Exception e) {
    }
     





}//hypromeal

//DCp

if(dcp.isSelected()){
    
  try {
        
      String sql = "select foodcost from food_cost where feed  = 'DCP'";
     Statement stm = conn.createStatement();
     ResultSet rs = stm. executeQuery(sql);   
        
     while (rs.next()){
         
     Float cost = rs .getFloat("foodcost");
     
     String name ="DCP";
     // double cpcost = (1/63)*21*cost;
        //double mecost = (1/3000)*3000*cost;
         double cacost = (1F/22)*0.8*cost;
          double availcost = (1F/17)*0.5*cost;
           //double lyscost = (1/2.83)*1.25*cost;
           // double metcost = (1/1.22)*0.89*cost;

           
           
                PreparedStatement pst = conn.prepareStatement("insert into information (food,cacost,availcost)  values  (?,?,?)");
     pst.setString(1,name);
           // pst.setDouble(2,cpcost);
           // pst.setDouble(3,mecost);
            pst.setDouble(2,cacost);
            pst.setDouble(3,availcost);
           // pst.setDouble(6,lyscost);
           // pst.setDouble(7,metcost);
            
             pst.executeUpdate();
            
     
     }      
        
        
        
        
        
        
    } catch (Exception e) {
    }  
    
    
    
    
}//dcp

//shell grit 

if(sg.isSelected()){
    try {
        
         String sql = "select foodcost from food_cost where feed  = 'Shell grit '";
     Statement stm = conn.createStatement();
     ResultSet rs = stm. executeQuery(sql);   
        
     while (rs.next()){
         
     Float cost = rs .getFloat("foodcost");
     
     String name ="Shell grit";
      double cpcost = (1/1)*21*cost;
       // double mecost = (1/3000)*3000*cost;
         double cacost = (1F/38)*0.8*cost;
          double availcost = (1/0.07F)*0.5*cost;
           //double lyscost = (1/2.83)*1.25*cost;
            //double metcost = (1/1.22)*0.89*cost;

     
                     PreparedStatement pst = conn.prepareStatement("insert into information (food,cpcost,cacost,availcost)  values  (?,?,?,?)");
     pst.setString(1,name);
           pst.setDouble(2,cpcost);
           // pst.setDouble(3,mecost);
            pst.setDouble(3,cacost);
            pst.setDouble(4,availcost);
           // pst.setDouble(6,lyscost);
           // pst.setDouble(7,metcost);
            
             pst.executeUpdate();
            
            
            
     } 
        
        
        
        
        
        
        
    } catch (Exception e) {
    }

}//shell grit 

//D Methionine

if(dm.isSelected() ){
    try {
        
           String sql = "select foodcost from food_cost where feed  = 'D Methionine'";
     Statement stm = conn.createStatement();
     ResultSet rs = stm. executeQuery(sql);   
        
     while (rs.next()){
         
     Float cost = rs .getFloat("foodcost");
     
     String name= "D Methionine";
     // double cpcost = (1/63)*21*cost;
       // double mecost = (1/3000)*3000*cost;
        // double cacost = (1/2.9)*1*cost;
          //double availcost = (1/1)*0.5*cost;
           //double lyscost = (1/2.83)*1.25*cost;
            double metcost = (1F/100)*0.78*cost;

            PreparedStatement pst = conn.prepareStatement("insert into information (food,metcost)  values  (?,?)");
     pst.setString(1,name);
          // pst.setDouble(2,cpcost);
          // // pst.setDouble(3,mecost);
           // pst.setDouble(4,cacost);
          //  pst.setDouble(5,availcost);
           // pst.setDouble(6,lyscost);
            pst.setDouble(2,metcost);
            
             pst.executeUpdate();
            
            
            
     
     }      
       
        
        
        
        
        
    } catch (Exception e) {
    }
     






}//D Methionine


//Molasses

if(m.isSelected()){

    try {
         String sql = "select foodcost from food_cost where feed  = 'Molasses'";
     Statement stm = conn.createStatement();
     ResultSet rs = stm. executeQuery(sql);   
        
     while (rs.next()){
         
     Float cost = rs .getFloat("foodcost");
     
     String name = "Molasses";
     // double cpcost = (1/63)*21*cost;
        double mecost = (1F/2400)*3100*cost;
         double cacost = (1F/0.89)*0.8*cost;
          double availcost = (1/0.02)*0.5*cost;
          // double lyscost = (1/2.83)*1.25*cost;
           // double metcost = (1/1.22)*0.89*cost;

           
           
           
           PreparedStatement pst = conn.prepareStatement("insert into information (food,mecost,cacost,availcost)  values  (?,?,?,?)");
     pst.setString(1,name);
          // pst.setDouble(2,cpcost);
          pst.setDouble(2,mecost);
           pst.setDouble(3,cacost);
           pst.setDouble(4,availcost);
           // pst.setDouble(6,lyscost);
            //pst.setDouble(7,metcost);
            
             pst.executeUpdate();
     
     }  
        
        
        
        
        
        
        
        
        
        
    } catch (Exception e) {
    }



}//Molasses

//Wheat floir 
//Wheat floir 
if(wf.isSelected()){
    try {
            String sql = "select foodcost from food_cost where feed  = 'Wheat floir '";
     Statement stm = conn.createStatement();
     ResultSet rs = stm. executeQuery(sql);   
        
     while (rs.next()){
         
     Float cost = rs .getFloat("foodcost");
     
     String name ="Wheat floir";
      double cpcost = (1F/15)*19*cost;
        double mecost = (1F/3000)*3100*cost;
         double cacost = (1/0.04F)*0.8*cost;
          double availcost = (1/0.1F)*0.5*cost;
           double lyscost = (1/0.3F)*1*cost;
            double metcost = (1/0.17F)*0.78*cost;

            PreparedStatement pst = conn.prepareStatement("insert into information (food,cpcost,mecost,cacost,availcost,lyscost,metcost)  values  (?,?,?,?,?,?,?)");
     pst.setString(1,name);
          pst.setDouble(2,cpcost);
          pst.setDouble(3,mecost);
           pst.setDouble(4,cacost);
           pst.setDouble(5,availcost);
            pst.setDouble(6,lyscost);
            pst.setDouble(7,metcost);
            
             pst.executeUpdate();
     
            
            
            
            
     
     } 
    } catch (Exception e) {
    }






}//Wheat floir 

//Palm oil

if(po.isSelected()){

    try {
            String sql = "select foodcost from food_cost where feed = 'Palm oil'";
     Statement stm = conn.createStatement();
     ResultSet rs = stm. executeQuery(sql);   
        
     while (rs.next()){
         
     Float cost = rs .getFloat("foodcost");
     
     String name ="Palm oil";
     // double cpcost = (1/63)*21*cost;
        double mecost = (1F/7500)*3100*cost;
        // double cacost = (1/2.9)*1*cost;
          //double availcost = (1/1)*0.5*cost;
           //double lyscost = (1/2.83)*1.25*cost;
            //double metcost = (1/100)*0.89*cost;

            
            
            
            PreparedStatement pst = conn.prepareStatement("insert into information (food,mecost)  values  (?,?)");
     pst.setString(1,name);
          // pst.setDouble(2,cpcost);
          pst.setDouble(2,mecost);
           // pst.setDouble(4,cacost);
          //  pst.setDouble(5,availcost);
           // pst.setDouble(6,lyscost);
           // pst.setDouble(7,metcost);
            
             pst.executeUpdate();
            
     
     }      
       
    } catch (Exception e) {
    }





}//Palm oil

//L  lys

if(ll.isSelected()){
    try {
        
              String sql = "select foodcost from food_cost where feed  = 'L  lys'";
     Statement stm = conn.createStatement();
     ResultSet rs = stm. executeQuery(sql);   
        
     while (rs.next()){
         
     Float cost = rs .getFloat("foodcost");
     
     String name = "L  lys";
     // double cpcost = (1/63)*21*cost;
        //double mecost = (1/7500)*3000*cost;
        // double cacost = (1/2.9)*1*cost;
          //double availcost = (1/1)*0.5*cost;
          double lyscost = (1F/100)*1*cost;
            //double metcost = (1/100)*0.89*cost;

     
            
            
                  PreparedStatement pst = conn.prepareStatement("insert into information (food,lyscost)  values  (?,?)");
     pst.setString(1,name);
          // pst.setDouble(2,cpcost);
         // pst.setDouble(2,mecost);
           // pst.setDouble(4,cacost);
          //  pst.setDouble(5,availcost);
           pst.setDouble(2,lyscost);
           // pst.setDouble(7,metcost);
            
             pst.executeUpdate();
            
            
            
            
     }
        
        
        
    } catch (Exception e) {
    }



}//L  lys

//Shel powder 


if(sp.isSelected()){
    try {
        
              String sql = "select foodcost from food_cost where feed  = 'Shel powder '";
     Statement stm = conn.createStatement();
     ResultSet rs = stm. executeQuery(sql);   
        
     while (rs.next()){
         
     Float cost = rs .getFloat("foodcost");
     
     String name ="Shel powder";
     double cpcost = (1/1)*19*cost;
        //double mecost = (1/7500)*3000*cost;
         double cacost = (1F/38)*0.8*cost;
          double availcost = (1F/0.07)*0.5*cost;
         // double lyscost = (1/100)*1.25*cost;
            //double metcost = (1/100)*0.89*cost;

     
                 PreparedStatement pst = conn.prepareStatement("insert into information (food,cpcost,cacost,availcost)  values  (?,?,?,?,?)");
     pst.setString(1,name);
          pst.setDouble(2,cpcost);
         // pst.setDouble(2,mecost);
           pst.setDouble(3,cacost);
           pst.setDouble(4,availcost);
          // pst.setDouble(6,lyscost);
           // pst.setDouble(7,metcost);
            
             pst.executeUpdate();
            
            
            
            
     }
        
        
                
                
             
    } catch (Exception e) {
    }



}//Shel powder 


ShowResult re = new ShowResult ();
re.show();
dispose();                   
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
   /// meken uda                  
                    
                    
                    
                    
                    
                    
                } catch (Exception e) {
                }
            // food seen eka
            
            
            
            
            
            
            
            
            
            }else {
            
             JOptionPane.showMessageDialog(null,"Please Selcet at lease one food ");
            
            
            }
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
        } catch (Exception e) {
        }














        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void coActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_coActionPerformed

    private void comActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comActionPerformed

    private void llActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_llActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_llActionPerformed

    private void wfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wfActionPerformed

    private void dcpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dcpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dcpActionPerformed

    private void fmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fmActionPerformed

    private void gomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gomActionPerformed

    private void spActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_spActionPerformed

    private void mActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mActionPerformed

    private void brActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_brActionPerformed

    private void somActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_somActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_somActionPerformed

    private void dmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dmActionPerformed

    private void sgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sgActionPerformed

    private void ymmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ymmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ymmActionPerformed

    private void rpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rpActionPerformed

    private void poActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_poActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        try {
            Statement stm = conn.createStatement();
                  String sql="drop table information";
  
          
                 stm. execute(sql);
        } catch (Exception e) {
        }


Boiler bo = new Boiler ();
bo.show();
dispose ();





        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalculationRE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalculationRE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalculationRE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalculationRE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalculationRE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox br;
    private javax.swing.JCheckBox co;
    private javax.swing.JCheckBox com;
    private javax.swing.JCheckBox dcp;
    private javax.swing.JCheckBox dm;
    private javax.swing.JCheckBox fm;
    private javax.swing.JCheckBox gom;
    private javax.swing.JCheckBox hm;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lable;
    private javax.swing.JCheckBox ll;
    private javax.swing.JCheckBox m;
    private javax.swing.JCheckBox po;
    private javax.swing.JCheckBox rp;
    private javax.swing.JCheckBox sg;
    private javax.swing.JCheckBox som;
    private javax.swing.JCheckBox sp;
    private javax.swing.JCheckBox wf;
    private javax.swing.JCheckBox ymm;
    // End of variables declaration//GEN-END:variables
}
